{
  "service": {
    "service": "serverless-store",
    "serviceObject": {
      "name": "serverless-store"
    },
    "provider": {
      "stage": "dev",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._,\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs6.10",
      "memorySize": 128,
      "timeout": 30,
      "environment": null,
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": "*",
          "Resource": [
            "arn:aws:sdb:us-east-1:349264414701:domain/Products",
            "arn:aws:sdb:us-east-1:349264414701:domain/ShoppingCart"
          ]
        },
        {
          "Effect": "Allow",
          "Action": "*",
          "Resource": [
            "arn:aws:dynamodb:us-east-1:349264414701:table/Products",
            "arn:aws:dynamodb:us-east-1:349264414701:table/ShoppingCart"
          ]
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "ProductsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-store-dev-products"
            }
          },
          "CommentsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-store-dev-comments"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "serverless-store",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-store-dev-products:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-store-dev-comments:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-store-dev-products:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-store-dev-comments:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": "*",
                        "Resource": [
                          "arn:aws:sdb:us-east-1:349264414701:domain/Products",
                          "arn:aws:sdb:us-east-1:349264414701:domain/ShoppingCart"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": "*",
                        "Resource": [
                          "arn:aws:dynamodb:us-east-1:349264414701:table/Products",
                          "arn:aws:dynamodb:us-east-1:349264414701:table/ShoppingCart"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-store",
                    "dev",
                    "us-east-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ProductsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-store/dev/1502966224941-2017-08-17T10:37:04.941Z/serverless-store.zip"
              },
              "FunctionName": "serverless-store-dev-products",
              "Handler": "functions/products.handler",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 30
            },
            "DependsOn": [
              "ProductsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ProductsLambdaVersioncmd4no0xjUmwJtk4fkzBv2rKkOAVPJXCyYI2JHhsWY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProductsLambdaFunction"
              },
              "CodeSha256": "cmd4no0xjUmwJtk4fkzBv2rKkOAVPJXCyYI+2JHhsWY="
            }
          },
          "CommentsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-store/dev/1502966224941-2017-08-17T10:37:04.941Z/serverless-store.zip"
              },
              "FunctionName": "serverless-store-dev-comments",
              "Handler": "functions/comments.handler",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 30
            },
            "DependsOn": [
              "CommentsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CommentsLambdaVersioncmd4no0xjUmwJtk4fkzBv2rKkOAVPJXCyYI2JHhsWY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CommentsLambdaFunction"
              },
              "CodeSha256": "cmd4no0xjUmwJtk4fkzBv2rKkOAVPJXCyYI+2JHhsWY="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-store"
            }
          },
          "ApiGatewayResourceProducts": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "products",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProductsauth": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "productsAuth",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCart": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "cart",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCheckout": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "checkout",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProductsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProducts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProductsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProductsauthGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProductsauth"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProductsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProductsauthOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "OPTIONS",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProductsauth"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProductsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodCartPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCart"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProductsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodCartOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "OPTIONS",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCart"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProductsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodCheckoutPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCheckout"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProductsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodCheckoutOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "OPTIONS",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCheckout"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProductsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1502966225012": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodProductsGet",
              "ApiGatewayMethodProductsauthGet",
              "ApiGatewayMethodProductsauthOptions",
              "ApiGatewayMethodCartPost",
              "ApiGatewayMethodCartOptions",
              "ApiGatewayMethodCheckoutPut",
              "ApiGatewayMethodCheckoutOptions"
            ]
          },
          "ProductsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProductsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CommentsIotTopicRule1": {
            "Type": "AWS::IoT::TopicRule",
            "Properties": {
              "TopicRulePayload": {
                "RuleDisabled": "false",
                "Sql": "SELECT * FROM 'serverless-store-comments'",
                "Actions": [
                  {
                    "Lambda": {
                      "FunctionArn": {
                        "Fn::GetAtt": [
                          "CommentsLambdaFunction",
                          "Arn"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "CommentsLambdaPermissionIotTopicRule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CommentsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "iot.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:iot:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":rule/",
                    {
                      "Ref": "CommentsIotTopicRule1"
                    }
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "ProductsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProductsLambdaVersioncmd4no0xjUmwJtk4fkzBv2rKkOAVPJXCyYI2JHhsWY"
            }
          },
          "CommentsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CommentsLambdaVersioncmd4no0xjUmwJtk4fkzBv2rKkOAVPJXCyYI2JHhsWY"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.amazonaws.com/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "awsAccountId": 349264414701
    },
    "functions": {
      "products": {
        "handler": "functions/products.handler",
        "events": [
          {
            "http": "GET products"
          },
          {
            "http": {
              "method": "get",
              "path": "productsAuth",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": "OPTIONS productsAuth"
          },
          {
            "http": {
              "method": "post",
              "path": "cart",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": "OPTIONS cart"
          },
          {
            "http": {
              "method": "put",
              "path": "checkout",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": "OPTIONS checkout"
          }
        ],
        "name": "serverless-store-dev-products",
        "package": {},
        "vpc": {}
      },
      "comments": {
        "handler": "functions/comments.handler",
        "events": [
          {
            "iot": {
              "sql": "SELECT * FROM 'serverless-store-comments'"
            }
          }
        ],
        "name": "serverless-store-dev-comments",
        "package": {},
        "vpc": {}
      }
    },
    "artifact": "/Users/nguyenvantai/Downloads/Building-Serverless-Web-Applications-master/Chapter10/serverless-store-chap10/backend/.serverless/serverless-store.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-store/dev/1502966224941-2017-08-17T10:37:04.941Z",
    "artifact": "serverless-store.zip"
  }
}